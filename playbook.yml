---

- name: 'This will compute a while. Good read: https://mafinto.sh/blog/'
  hosts: localhost
  connection: local

  become: true
  tasks:

  - name: Determine local username
    become: false
    local_action: command whoami
    register: local_username
  - name: Determine distribution codename
    become: false
    local_action: command lsb_release -cs
    register: codename
  - name: Create temporary directory
    become: false
    tempfile:
      state: directory
    register: tmp_dir

  - block: # Utilities
    - name: '[Utilities] Install'
      apt:
        name: ['build-essential', 'htop', 'iperf3', 'mosh', 'nano', 'nmap', 'nload', 'ufw', 'screen', 'tmux', 'sshfs', 'gnome-keyring']
        update_cache: yes

  - block: # NodeJS and Yarn
    - name: '[NodeJS] Add NodeJS GPG key'
      apt_key:
        url: http://deb.nodesource.com/gpgkey/nodesource.gpg.key
        id: 9FD3B784BC1C6FC31A8A0A1C1655A0AB68576280
    - name: '[NodeJS] Add Yarn GPG key'
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg
        id: 72ECF46A56B4AD39C907BBB71646B01B86E50310
    - name: '[NodeJS] Add NodeJS repository'
      apt_repository:
        repo: deb http://deb.nodesource.com/node_16.x {{codename.stdout}} main
        filename: nodesource
        update_cache: no
    - name: '[NodeJS] Add Yarn repository'
      apt_repository:
        repo: deb https://dl.yarnpkg.com/debian stable main
        filename: yarn
        update_cache: no
    - name: '[NodeJS] Install'
      apt:
        name: ['nodejs', 'yarn']
        update_cache: yes
    - name: '[NodeJS] Set package root of NPM to the home directory'
      become: false
      lineinfile:
        path: ~/.npmrc
        line: prefix = ${HOME}/.npm
        create: yes
    - name: '[NodeJS] Add NPM and Yarn to PATH'
      become: false
      lineinfile:
        path: ~/.bashrc
        line: export PATH=$HOME/.npm/bin:$PATH

  - block: # Docker and Docker Compose
    - name: '[Docker] Add Docker GPG key'
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        id: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
    - name: '[Docker] Add Docker repository'
      apt_repository:
        repo: deb https://download.docker.com/linux/debian {{codename.stdout}} stable
        filename: docker
        update_cache: no
    - name: '[Docker] Install Docker'
      apt: update_cache=yes name=docker-ce
    - name: '[Docker] Create docker group'
      group:
        name: docker
        state: present
    - name: '[Docker] Add user to docker group'
      user:
        name: '{{local_username.stdout}}'
        groups: docker
    - name: '[Docker] Determine download URL'
      shell: echo "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)"
      register: docker_compose_url
    - name: '[Docker] Install Docker Compose'
      get_url:
        url: '{{docker_compose_url.stdout}}'
        mode: 0755
        dest: /usr/local/bin/docker-compose

  - block: # Golang
    - name: '[Golang] Determine latest version'
      uri:
        url: https://go.dev/VERSION?m=text
        return_content: yes
      register: golang_version
    - name: '[Golang] Get tarball'
      get_url:
        url: https://dl.google.com/go/{{golang_version.content}}.linux-amd64.tar.gz
        dest: '{{tmp_dir.path}}'
    - name: '[Golang] Extract'
      unarchive:
        src: '{{tmp_dir.path}}/{{golang_version.content}}.linux-amd64.tar.gz'
        copy: no
        dest: /usr/local
    - name: '[Golang] Configure `~/.bashrc`'
      become: false
      lineinfile:
        path: ~/.bashrc
        line: '{{item}}'
      with_items:
        - export GOROOT=/usr/local/go
        - export GOPATH=$HOME/go
        - export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH

  - block: # Rust
    - name: '[Rust] Get installer'
      become: false
      get_url:
        url: https://sh.rustup.rs
        mode: 0755
        dest: '{{tmp_dir.path}}/rustup-init'
    - name: '[Rust] Install'
      become: false
      command: '{{tmp_dir.path}}/rustup-init -y'
      args:
        creates: ~/.rustup
    - name: '[Rust] Add to PATH'
      become: false
      lineinfile:
        path: ~/.bashrc
        line: source $HOME/.cargo/env

  - block: # Deno
    - name: '[Deno] Get installer'
      become: false
      get_url:
        url: https://github.com/denoland/deno/releases/latest/download/deno-x86_64-unknown-linux-gnu.zip
        mode: 0755
        dest: '{{tmp_dir.path}}/deno.zip'
    - name: '[Deno] Create directory'
      become: false
      file:
        path: ~/.deno/bin
        state: directory
    - name: '[Deno] Extract binary'
      become: false
      unarchive:
        src: '{{tmp_dir.path}}/deno.zip'
        dest: ~/.deno/bin
        mode: 0755
    - name: '[Deno] Add to PATH'
      become: false
      lineinfile:
        path: ~/.bashrc
        line: export PATH=$HOME/.deno/bin:$PATH

  - name: Clean up
    file:
      path: '{{tmp_dir}}'
      state: absent
